#!/usr/bin/env python

import os
import sys

sys.path.insert(0, os.path.dirname(__file__))

from selectlib.filter import search
from selectlib.interactive import run_curses
from selectlib.reader import read
from selectlib.terminal import output_to_prompt


USAGE = """\
I select stuff.

Usage:
  {name} [--out (print | shell)]
  {name} (-h | --help)

Options:
  -h --help       Show this message and exit.
""".format(
    name=os.path.basename(__file__)
)


def main():
    args = parse_args()
    if args["-h"] or args["--help"]:
        usage()
        success()
    (action, result) = run_curses(read(sys.stdin), "", search)
    if args["--out"] == "print" and action in ("select", "tab"):
        print(result)
        success()
    if args["--out"] == "shell" and action == "tab":
        output_to_prompt(result)
        success()
    if args["--out"] == "shell" and action == "select":
        output_to_prompt(result+"\n")
        success()
    fail()


def parse_args():
    args = {
        "-h": None,
        "--help": None,
        "--out": None,
    }
    if sys.argv[1:] == ["-h"]:
        args["-h"] = True
        return args
    if sys.argv[1:] == ["--help"]:
        args["--help"] = True
        return args
    if sys.argv[1:] == ["--out", "print"]:
        args["--out"] = "print"
        return args
    if sys.argv[1:] == ["--out", "shell"]:
        args["--out"] = "shell"
        return args
    if sys.argv[1:] == []:
        args["--out"] = "print"
        return args
    usage()
    fail()


def usage():
    print(USAGE.strip())


def success():
    sys.exit(0)


def fail():
    sys.exit(1)


if __name__ == "__main__":
    main()
